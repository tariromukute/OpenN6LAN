version: '3.8'
services:
    trex:
      image: tariromukute/cisco-trex:latest
      container_name: "trex"
      hostname: "trex"
      stdin_open: true
      tty: true   
      ports:
        - "4500:4500"
        - "4501:4501"
        - "4507:4507"
        - "4500:4500/udp"
        - "4501:4501/udp"
        - "4507:4507/udp"
      networks:
        n4_net:
          ipv4_address: 192.168.70.130
          priority: 1000
        n3_net:
          ipv4_address: 192.168.71.130
          priority: 900
        data_net:
          ipv4_address: 192.168.73.137
          priority: 800
      deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
      volumes:
        - ./conf/trex_dut_cfg.yaml:/etc/trex_cfg.yaml
        - ./scripts/trex_dut_gtpu_topo.py:/etc/trex_gtpu_topo.py
        - ./scripts/trex_http_simple.py:/v3.05/astf/trex_http_simple.py
      command: ["./t-rex-64", "-i", "--astf", "--software", "--tso-disable", "--cfg", "/etc/trex_cfg.yaml"]
      privileged: true
      
    oai-ext-dn:
        privileged: true
        init: true
        container_name: "oai-ext-dn"
        image: oaisoftwarealliance/trf-gen-cn5g:latest
        entrypoint: /bin/bash -c \
              "iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE;"\
              "ip route add 48.0.0.0/24 via 192.168.73.137 dev eth0;"\
              "ip route add 16.0.0.0/24 via 192.168.71.130 dev eth1; ip route; sleep infinity"
        command: ["/bin/bash", "-c", "trap : SIGTERM SIGINT; sleep infinity & wait"]
        healthcheck:
            test: /bin/bash -c "iptables -L -t nat | grep MASQUERADE"
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            n3_net:
              ipv4_address: 192.168.71.134
            data_net:
              ipv4_address: 192.168.73.138
networks:
    n4_net:
        driver: bridge
        name: demo-n4-net
        ipam:
            config:
                - subnet: 192.168.70.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-n4"
    n3_net:
        driver: bridge
        name: demo-n3-net
        ipam:
            config:
                - subnet: 192.168.71.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-n3"
    n6_net:
        driver: bridge
        name: demo-n6-net
        ipam:
            config:
                - subnet: 192.168.72.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-n6"
    data_net:
        driver: bridge
        name: demo-data-net
        ipam:
            config:
                - subnet: 192.168.73.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-dn"